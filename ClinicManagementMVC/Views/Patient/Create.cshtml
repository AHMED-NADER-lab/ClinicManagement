@model ClinicManagement.Bussiness.ClinicModelMV.PatientMV

@{
    ViewBag.Title = "Create";
}

<div class="panel panel-default">
    <div class="panel-heading">Create new Patient</div>
    <div class="panel-body">

        @using (Html.BeginForm("Createnewpatient", "Patient"))
        {
            @Html.AntiForgeryToken()

            <div class="form-inline">
                <h4>PatientMV</h4>
                <hr />
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })



               
                    @Html.LabelFor(model => model.PatientName, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-4">
                        @Html.EditorFor(model => model.PatientName, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.PatientName, "", new { @class = "text-danger" })
                    </div>


                <div class="col-md-12"></div>
                @Html.LabelFor(model => model.Gender, htmlAttributes: new { @class = "control-label col-md-2" }) 
                <div class="col-md-4">
                    @Html.EnumDropDownListFor(m => m.ActionsList, "Select a license", new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.Gender, "", new { @class = "text-danger" })
                </div>
                
               
                    @Html.LabelFor(model => model.Phone, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-4">
                        @Html.EditorFor(model => model.Phone, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Phone, "", new { @class = "text-danger" })
                    </div>
              
                <div class="col-md-12"></div>
              
                    @Html.LabelFor(model => model.Age, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-4">
                        @Html.EditorFor(model => model.Age, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Age, "", new { @class = "text-danger" })
                    </div>
            

         
               
                    @Html.LabelFor(model => model.cityname, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-4">
                        @Html.DropDownList("cityid", new SelectList(Model.citylist, "Id", "Name"), "Select City", new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.cityname, "", new { @class = "text-danger" })
                    </div>
         

                <div class="col-md-12"></div>
                    @Html.LabelFor(model => model.areaname, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-4">
                        @Html.DropDownList("Areaid", Enumerable.Empty<SelectListItem>(), "Select District", new { @class = "form-control", @disabled = "disabled" })
                        @Html.ValidationMessageFor(model => model.areaname, "", new { @class = "text-danger" })
                    </div>
           
         
                <div class="col-md-offset-2 col-md-6 " style="margin-top:10px">
                    <div class="col-md-offset-2 col-md-3">
                        <input type="submit" value="Create" class="btn btn-default" />
                    </div>

                    <div class = "btn btn-default col-md-pull-2">
                        @Html.ActionLink("Back to List", "Index", new { @class = "col-md-3" })

                    </div>
                </div>
            </div>
        }

    </div>
</div>








@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")




<script>
    $("#cityid").change(function () {
        var selectedCity = $("#cityid").val();
        fillDistricts(selectedCity);
    });

    function fillDistricts(selectedCity) {

        var getDistrictsUrl = '@Url.Action("GetDistrictsByCityId", "Patient")';
        var cityDistricts = $('#Areaid');

        if (selectedCity != null && selectedCity !== '') {
            $.ajax({
                url: getDistrictsUrl,
                data: { cityId: selectedCity },
                cache: false,
                async: false,
                type: "POST",
                success: function (data) {
                    cityDistricts.removeAttr('disabled');
                    cityDistricts.val('');
                    cityDistricts.empty();

                    cityDistricts.append(
                            $('<option/>', {
                                value: "",
                                text: "Select district"
                            })
                        );

                    $.each(data, function () {
                        cityDistricts.append(
                            $('<option/>', {
                                value: this.id,
                                text: this.name
                            })
                        );
                    });
                },
                error: function (reponse) {
                    alert("error : " + reponse);
                }
            });
        } else {
            cityDistricts.val('');
            cityDistricts.attr("disabled", "disabled");
        }
    }
</script>

    }
