@model ClinicManagement.Bussiness.ClinicModelMV.PatientMV

@{
    ViewBag.Title = "Edit";
}

<h2>Edit Patient</h2>


@using (Html.BeginForm("Editpatient", "Patient"))
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <h4>PatientMV</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.PatientId)
        @Html.HiddenFor(model => model.SerialPatient)


        <div class="form-group">
            @Html.LabelFor(model => model.PatientName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.PatientName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.PatientName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Phone, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Phone, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Phone, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Age, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Age, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Age, "", new { @class = "text-danger" })
            </div>
        </div>

      

  

   

        <div class="form-group">
            @Html.LabelFor(model => model.cityname, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("cityid", new SelectList(Model.citylist, "Id", "Name"), "Select City", new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.cityname, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.areaname, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("Areaid", new SelectList(Model.Arealist, "Id", "Name"), "Select District", new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.areaname, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")



<script>
    $("#cityid").change(function () {
        var selectedCity = $("#cityid").val();
        fillDistricts(selectedCity);
    });

    function fillDistricts(selectedCity) {

        var getDistrictsUrl = '@Url.Action("GetDistrictsByCityId", "Patient")';
        var cityDistricts = $('#Areaid');

        if (selectedCity != null && selectedCity !== '') {
            $.ajax({
                url: getDistrictsUrl,
                data: { cityId: selectedCity },
                cache: false,
                async: false,
                type: "POST",
                success: function (data) {
                    cityDistricts.val('');
                    cityDistricts.empty();
                   

                    cityDistricts.append(
                            $('<option/>', {
                                value: "",
                                text: "Select district"
                            })
                        );

                    $.each(data, function () {
                        cityDistricts.append(
                            $('<option/>', {
                                value: this.id,
                                text: this.name
                            })
                        );
                    });
                },
                error: function (reponse) {
                    alert("error : " + reponse);
                }
            });
        } else {
            cityDistricts.val('');
            cityDistricts.attr("disabled", "disabled");
        }
    }
</script>

}
